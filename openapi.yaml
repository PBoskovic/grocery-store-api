components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: MongoDB ObjectId
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, manager, employee]
        nodeId:
          type: string
          description: The org node the user belongs to (office or store)
      required:
        - _id
        - name
        - email
        - role
        - nodeId

    UserCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        role:
          type: string
          enum: [manager, employee]
        nodeId:
          type: string
      required:
        - name
        - email
        - password
        - role
        - nodeId

    UserUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [manager, employee]
        nodeId:
          type: string

  responses:
    Unauthorized:
      description: Unauthorized. Invalid or missing token.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string

    Forbidden:
      description: Forbidden. Not enough permissions.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string

    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string

    BadRequest:
      description: Bad request (validation failed)
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: object
                  properties:
                    msg:
                      type: string
                    param:
                      type: string
                    location:
                      type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT